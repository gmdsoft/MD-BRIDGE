<Window x:Class="MD.BRIDGE.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
        xmlns:local="clr-namespace:MD.BRIDGE"
        xmlns:viewModels="clr-namespace:MD.BRIDGE.ViewModels"
        xmlns:footer="clr-namespace:MD.BRIDGE.Views.Footer"
        xmlns:properties="clr-namespace:MD.BRIDGE.Properties"
        IsVisibleChanged="Window_IsVisibleChanged"
        mc:Ignorable="d"
        WindowStartupLocation="Manual"
        ResizeMode="CanResize"
        Closing="Window_Closing"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        Title="MD-BRIDGE"
        Width="960"
        Height="640">
    <!-- 리소스: 모든 UI 스타일 및 컨버터를 한곳에 모음 -->
    <Window.Resources>
        <!-- ========================================================= -->
        <!--                      UI 스타일 리소스                       -->
        <!-- ========================================================= -->
        <!-- 탭 컨트롤(헤더용) 스타일 -->
        <Style x:Key="TabControlHeaderStyle" TargetType="TabControl">
            <Setter Property="TabStripPlacement" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="TemplateRoot" ClipToBounds="True" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <!-- 탭 헤더 영역 너비 -->
                                <ColumnDefinition Width="75"/>
                            </Grid.ColumnDefinitions>
                            <!-- 탭 버튼들을 호스팅하는 TabPanel -->
                            <TabPanel x:Name="HeaderPanel"
                                      Background="#1F2937"
                                      IsItemsHost="True"
                                      Margin="0"
                                      KeyboardNavigation.TabIndex="1"
                                      Panel.ZIndex="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 탭 아이템(버튼) 스타일 -->
        <Style x:Key="TabItemButtonStyle" TargetType="TabItem">
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="Background" Value="#1F2937"/>
            <Setter Property="Width" Value="75"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border x:Name="BorderElement"
                                Background="{TemplateBinding Background}"
                                Padding="0"
                                BorderThickness="3,0,0,0">
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <!-- 아이콘 표시 영역 -->
                                <Border x:Name="IconBorder"
                                        Width="40" Height="40"
                                        CornerRadius="16"
                                        Background="Transparent">
                                    <ContentPresenter Content="{TemplateBinding Tag}"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"/>
                                </Border>
                                <!-- 텍스트 표시 영역 -->
                                <TextBlock Text="{TemplateBinding Header}" 
                                           FontSize="13"
                                           Margin="0"
                                           HorizontalAlignment="Center"
                                           Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- 선택된 상태 -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="BorderElement" Property="Background" Value="#374151"/>
                                <Setter TargetName="BorderElement" Property="BorderBrush" Value="#4681DB"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <!-- 마우스 오버 상태 -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="BorderElement" Property="Background" Value="#2D3748"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 서버 주소 입력 TextEdit 스타일 -->
        <Style x:Key="ServerAddressTextEditStyle" TargetType="dxe:TextEdit">
            <!-- 기본 속성 설정 -->
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderBrush" Value="#E0E0E0"/>
            <Setter Property="BorderThickness" Value="1"/>

            <!-- ControlTemplate 재정의 -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="dxe:TextEdit">
                        <Grid>
                            <!-- 전체 배경 및 테두리 -->
                            <Border x:Name="Border"
                                    CornerRadius="3"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <!-- 실제 입력 영역 -->
                                    <TextBox x:Name="PART_Editor"
                                             Text="{Binding EditValue, RelativeSource={RelativeSource TemplatedParent}, 
                                                    Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             Background="Transparent"
                                             BorderThickness="0"
                                             VerticalContentAlignment="Center"
                                             Margin="3,3,25,3" />

                                    <!-- 플레이스홀더 -->
                                    <TextBlock x:Name="NullTextBlock"
                                               Text="{TemplateBinding NullText}"
                                               Foreground="Gray"
                                               Margin="3,3,25,3"
                                               VerticalAlignment="Center"
                                               IsHitTestVisible="False"
                                               Visibility="Collapsed"/>
                                </Grid>
                            </Border>

                            <!-- 상태별로 표시할 아이콘 (기본은 숨김) -->
                            <Image x:Name="StatusIcon"
                                    Width="16" Height="16"
                                    Margin="0,0,5,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Visibility="Collapsed"/>
                        </Grid>

                        <!-- 템플릿 내부 상태 트리거 -->
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Text, ElementName=PART_Editor}" Value="" />
                                    <Condition Binding="{Binding IsFocused, ElementName=PART_Editor}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="NullTextBlock" Property="Visibility" Value="Visible" />
                            </MultiDataTrigger>

                            <!-- 연결 성공 시 아이콘 표시 -->
                            <DataTrigger Binding="{Binding ConnectionStatus}"
                                         Value="{x:Static viewModels:ConnectionStatus.Connected}">
                                <Setter TargetName="StatusIcon" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="StatusIcon" Property="Source"
                                        Value="/Assets/icon_connect_success.png"/>
                            </DataTrigger>

                            <!-- 오류 발생 (Init_Error 포함) -->
                            <DataTrigger Binding="{Binding ConnectionStatus}"
                                         Value="{x:Static viewModels:ConnectionStatus.Error}">
                                <Setter TargetName="StatusIcon" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="StatusIcon" Property="Source"
                                        Value="/Assets/icon_connect_fail.png"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ConnectionStatus}"
                                         Value="{x:Static viewModels:ConnectionStatus.Init_Error}">
                                <Setter TargetName="StatusIcon" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="StatusIcon" Property="Source"
                                        Value="/Assets/icon_connect_fail.png"/>
                            </DataTrigger>

                            <!-- 연결 중, Idle 등에서는 아이콘 숨김 -->
                            <DataTrigger Binding="{Binding ConnectionStatus}"
                                         Value="{x:Static viewModels:ConnectionStatus.Connecting}">
                                <Setter TargetName="StatusIcon" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ConnectionStatus}"
                                         Value="{x:Static viewModels:ConnectionStatus.Idle}">
                                <Setter TargetName="StatusIcon" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>

                            <!-- Idle 상태: 수정 가능 -->
                            <DataTrigger Binding="{Binding ConnectionStatus}" 
                                         Value="{x:Static viewModels:ConnectionStatus.Idle}">
                                <Setter TargetName="PART_Editor" Property="IsReadOnly" Value="False"/>
                            </DataTrigger>

                            <!-- Init_Error 상태: 수정 가능 -->
                            <DataTrigger Binding="{Binding ConnectionStatus}" 
                                         Value="{x:Static viewModels:ConnectionStatus.Init_Error}">
                                <Setter TargetName="PART_Editor" Property="IsReadOnly" Value="False"/>
                            </DataTrigger>

                            <!-- 그 외 상태(Connecting, Connected, Error): 수정 불가 -->
                            <DataTrigger Binding="{Binding ConnectionStatus}" 
                                         Value="{x:Static viewModels:ConnectionStatus.Connected}">
                                <Setter TargetName="PART_Editor" Property="IsReadOnly" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ConnectionStatus}" 
                                         Value="{x:Static viewModels:ConnectionStatus.Connecting}">
                                <Setter TargetName="PART_Editor" Property="IsReadOnly" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ConnectionStatus}" 
                                         Value="{x:Static viewModels:ConnectionStatus.Error}">
                                <Setter TargetName="PART_Editor" Property="IsReadOnly" Value="True"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!-- 스타일 트리거로 Border 색상 및 입력 가능 여부 변경 -->
            <Style.Triggers>
                <!-- 연결 중 -->
                <DataTrigger Binding="{Binding ConnectionStatus}" 
                             Value="{x:Static viewModels:ConnectionStatus.Connecting}">
                    <Setter Property="BorderBrush" Value="Gray"/>
                    <Setter Property="BorderThickness" Value="3,1,1,1"/>
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>

                <!-- 연결 성공 -->
                <DataTrigger Binding="{Binding ConnectionStatus}" 
                             Value="{x:Static viewModels:ConnectionStatus.Connected}">
                    <Setter Property="BorderBrush" Value="Green"/>
                    <Setter Property="BorderThickness" Value="3,1,1,1"/>
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>

                <!-- 오류 발생 -->
                <DataTrigger Binding="{Binding ConnectionStatus}" 
                             Value="{x:Static viewModels:ConnectionStatus.Init_Error}">
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="3,1,1,1"/>
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ConnectionStatus}" 
                             Value="{x:Static viewModels:ConnectionStatus.Error}">
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="3,1,1,1"/>
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- 서버 연결 안내 텍스트 스타일 -->
        <Style x:Key="ServerStatusInstructionTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="FontSize" Value="12"/>
            <Style.Triggers>
                <!-- 연결 중/성공 시 회색 -->
                <DataTrigger Binding="{Binding ConnectionStatus}" 
                             Value="{x:Static viewModels:ConnectionStatus.Connecting}">
                    <Setter Property="Foreground" Value="Gray"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ConnectionStatus}" 
                             Value="{x:Static viewModels:ConnectionStatus.Connected}">
                    <Setter Property="Foreground" Value="Gray"/>
                </DataTrigger>
                <!-- 오류 시 빨간색 -->
                <DataTrigger Binding="{Binding ConnectionStatus}"
                             Value="{x:Static viewModels:ConnectionStatus.Init_Error}">
                    <Setter Property="Foreground" Value="Red"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ConnectionStatus}" 
                             Value="{x:Static viewModels:ConnectionStatus.Error}">
                    <Setter Property="Foreground" Value="Red"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- 서버 연결/중단 버튼 스타일 -->
        <Style x:Key="ConnectButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="Background" Value="#135DB5"/>
            <Setter Property="BorderBrush" Value="#135DB5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder"
                        Background="{TemplateBinding Background}"
                        CornerRadius="3"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <!-- ConnectionStatus 상태별 트리거 -->
                            <DataTrigger Binding="{Binding ConnectionStatus}" 
                                 Value="{x:Static viewModels:ConnectionStatus.Idle}">
                                <Setter Property="Background" Value="#135DB5"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Content" Value="{x:Static properties:Resources.Button_Connect}"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ConnectionStatus}" 
                                 Value="{x:Static viewModels:ConnectionStatus.Connecting}">
                                <Setter Property="Background" Value="#135DB5"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="IsEnabled" Value="False"/>
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                            <Grid Width="20" Height="20" Margin="0,0,5,0">
                                                <Ellipse Stroke="#4681DB" StrokeThickness="3"/>
                                                <Ellipse Stroke="White" StrokeThickness="3" StrokeDashArray="12 10">
                                                    <Ellipse.RenderTransform>
                                                        <RotateTransform CenterX="10" CenterY="10"/>
                                                    </Ellipse.RenderTransform>
                                                    <Ellipse.Triggers>
                                                        <EventTrigger RoutedEvent="Loaded">
                                                            <BeginStoryboard>
                                                                <Storyboard RepeatBehavior="Forever">
                                                                    <DoubleAnimation 
                                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                                From="0" To="360"
                                                                Duration="0:0:1" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </Ellipse.Triggers>
                                                </Ellipse>
                                            </Grid>
                                            <TextBlock Text="{x:Static properties:Resources.Button_Connect}" 
                                               VerticalAlignment="Center" Foreground="White"/>
                                        </StackPanel>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ConnectionStatus}" 
                                 Value="{x:Static viewModels:ConnectionStatus.Connected}">
                                <Setter Property="Background" Value="#135DB5"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Content" Value="{x:Static properties:Resources.Button_Stop}"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ConnectionStatus}" 
                                 Value="{x:Static viewModels:ConnectionStatus.Init_Error}">
                                <Setter Property="Background" Value="#135DB5"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Content" Value="{x:Static properties:Resources.Button_Connect}"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ConnectionStatus}" 
                                 Value="{x:Static viewModels:ConnectionStatus.Error}">
                                <Setter Property="Background" Value="#D42A34"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Content" Value="{x:Static properties:Resources.Button_Stop}"/>
                            </DataTrigger>

                            <!-- 일반 Hover 상태 -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#1A6DD5"/>
                            </Trigger>

                            <!-- 일반 Pressed 상태 -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#104A8C"/>
                            </Trigger>

                            <!-- Error 상태 + Hover -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ConnectionStatus}" 
                                       Value="{x:Static viewModels:ConnectionStatus.Error}"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#E05C5C"/>
                            </MultiDataTrigger>

                            <!-- Error 상태 + Pressed -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ConnectionStatus}" 
                                       Value="{x:Static viewModels:ConnectionStatus.Error}"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#B02A2A"/>
                            </MultiDataTrigger>

                            <!-- Error 상태 + Disabled -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ConnectionStatus}" 
                                       Value="{x:Static viewModels:ConnectionStatus.Error}"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#F1A1A1"/>
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#F1A1A1"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiDataTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 적용 버튼 스타일 -->
        <Style x:Key="ApplyButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="Background" Value="#135DB5"/>
            <Setter Property="BorderBrush" Value="#135DB5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ApplyButtonBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="3"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- 마우스 오버 시 -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ApplyButtonBorder" Property="Background" Value="#3D82D9"/>
                            </Trigger>
                            <!-- 버튼 클릭 시 -->
                            <Trigger Property="IsPressed" Value="True" >
                                <Setter TargetName="ApplyButtonBorder" Property="Background" Value="#0E4C91"/>
                            </Trigger>
                            <!-- 비활성화 상태 -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ApplyButtonBorder" Property="Background" Value="#EBF2FA"/>
                                <Setter Property="Foreground" Value="#A9C4D8"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <!-- ========================================================= -->
    <!--                        윈도우 레이아웃                      -->
    <!-- ========================================================= -->
    <Grid>
        <Grid.RowDefinitions>
            <!-- 타이틀 바 높이 -->
            <RowDefinition Height="40"/>
            <!-- 메인 콘텐츠 영역 -->
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- (1) 커스텀 타이틀 바 -->
        <Border x:Name="TitleBar" 
                CornerRadius="5,5,0,0"
                Background="#1E62B5"
                Grid.Row="0"
                MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
            <Grid>
                <Grid.ColumnDefinitions>
                    <!-- 왼쪽: 아이콘 및 제목 -->
                    <ColumnDefinition Width="*"/>
                    <!-- 오른쪽: 창 제어 버튼 -->
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <!-- 타이틀 내용 -->
                <StackPanel Orientation="Horizontal" Grid.Column="0" Margin="10,0" VerticalAlignment="Center">
                    <Image Source="/Assets/icon_app_middle.png"
                           Width="24" Height="24" Margin="0,0,8,0"/>
                    <TextBlock Text="MD-BRIDGE" FontSize="14" Foreground="White" VerticalAlignment="Center"/>
                </StackPanel>
                <!-- 창 제어 버튼: 최소화, 최대화, 닫기 -->
                <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0">
                    <Button x:Name="TitleBarMinimizeButton"
                            Width="46" Height="32"
                            Click="MinimizeButton_Click"
                            Background="Transparent"
                            BorderThickness="0">
                        <Image Source="/Assets/titlebar_minimize.png" 
                               Width="12" Height="12" 
                               HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Button>
                    <Button x:Name="TitleBarMaximizeButton"
                            Width="46" Height="32"
                            Click="MaximizeButton_Click"
                            Background="Transparent"
                            BorderThickness="0">
                        <Image Source="/Assets/titlebar_maximize.png" 
                               Width="12" Height="12" 
                               HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Button>
                    <Button x:Name="TitleBarCloseButton"
                            Width="46" Height="32"
                            Click="CloseButton_Click"
                            Background="Transparent"
                            BorderThickness="0">
                        <Image Source="/Assets/titlebar_close.png" 
                               Width="12" Height="12" 
                               HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Button>
                </StackPanel>
            </Grid>
        </Border>

        <!-- (2) 메인 콘텐츠 영역 -->
        <Grid Grid.Row="1" Background="LightGray">
            <Grid.ColumnDefinitions>
                <!-- 탭 헤더 영역 -->
                <ColumnDefinition Width="75"/>
                <!-- 선택된 탭의 실제 콘텐츠 영역 -->
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- (A) 탭 헤더 영역: TabControl 사용 -->
            <TabControl x:Name="MyTabControl"
                        Style="{StaticResource TabControlHeaderStyle}"
                        Background="#1F2937">
                <!-- Home 탭 -->
                <TabItem Header="{x:Static properties:Resources.Tab_Home}" 
                         Style="{StaticResource TabItemButtonStyle}">
                    <TabItem.Tag>
                        <Image Source="/Assets/tab_home.png" Width="24" Height="24"/>
                    </TabItem.Tag>
                    <!-- Home 탭 콘텐츠 -->
                    <TabItem.Content>
                        <Grid>
                            <Grid.RowDefinitions>
                                <!-- 콘텐츠 영역 -->
                                <RowDefinition Height="*"/>
                                <!-- 하단 상태 표시 영역 -->
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.Resources>
                                <!-- 기본 텍스트 스타일 -->
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="Black"/>
                                </Style>
                            </Grid.Resources>
                            <Grid Grid.Row="0" Margin="30">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <!-- 서버 연결 카드 -->
                                <Border Grid.Row="1" Margin="0,5,0,0" Background="White"  
                                        VerticalAlignment="Top" CornerRadius="8" Padding="20" 
                                        BorderBrush="#E0E0E0" BorderThickness="1">
                                    <StackPanel>
                                        <!-- 카드 제목 영역 -->
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                            <Image Source="/Assets/icon_connect.png" Width="20" Height="20"/>
                                            <TextBlock Text="{x:Static properties:Resources.Input_ServerConnection}" 
                                                       FontSize="20" FontWeight="SemiBold" Margin="5,0,0,0" />
                                        </StackPanel>
                                        <!-- 서버 주소 입력 영역 -->
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{x:Static properties:Resources.Input_ServerAddress}" 
                                                       VerticalAlignment="Top" FontSize="14" Margin="0,7,10,0"/>
                                            <StackPanel Grid.Column="1">
                                                <dxe:TextEdit 
                                                    Style="{StaticResource ServerAddressTextEditStyle}"
                                                    FontSize="14" 
                                                    EditValue="{Binding ServerAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                    HorizontalAlignment="Stretch" 
                                                    VerticalContentAlignment="Center" 
                                                    Padding="5,0,0,0" 
                                                    NullText="{x:Static properties:Resources.Input_Connection_DefaultServerAddress}"
                                                    Height="30" />


                                                <!-- 서버 연결 상태 안내 문구 -->
                                                <TextBlock Text="{Binding ConnectionStatusDetailText}" 
                                                           Style="{StaticResource ServerStatusInstructionTextStyle}"
                                                           Margin="0,8,0,0"/>
                                            </StackPanel>
                                            <Button Grid.Column="2"
                                                    Command="{Binding ConnectCommand}" 
                                                    Margin="5,-2,-5,33"
                                                    Width="100"
                                                    Height="35"
                                                    Style="{StaticResource ConnectButtonStyle}"/>
                                        </Grid>
                                    </StackPanel>
                                </Border>
                            </Grid>
                            <!-- 하단 상태 표시 (Footer) -->
                            <footer:FooterStatusControl Grid.Row="1"/>
                        </Grid>
                    </TabItem.Content>
                </TabItem>

                <!-- Info 탭 -->
                <TabItem Header="{x:Static properties:Resources.Tab_Info}" 
                         Style="{StaticResource TabItemButtonStyle}">
                    <TabItem.Tag>
                        <Image Source="/Assets/tab_info.png" Width="24" Height="24"/>
                    </TabItem.Tag>
                    <!-- Info 탭 콘텐츠 -->
                    <TabItem.Content>
                        <Grid>
                            <Grid.RowDefinitions>
                                <!-- 중앙 콘텐츠 영역 -->
                                <RowDefinition Height="*"/>
                                <!-- 하단 상태 표시 영역 -->
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Row="0" Orientation="Vertical" 
                                        HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock FontSize="24" Foreground="Black" FontWeight="Bold" 
                                           TextAlignment="Center" HorizontalAlignment="Center">
                                    <TextBlock.Text>MD-BRIDGE</TextBlock.Text>
                                </TextBlock>
                                <TextBlock FontSize="14" Foreground="Gray" 
                                           Margin="0,5,0,30" TextAlignment="Center" HorizontalAlignment="Center">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="v{0}">
                                            <Binding Path="Version"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                <TextBlock Text="© GMDSOFT Inc. All rights reserved." FontSize="12" Foreground="Gray" 
                                           TextAlignment="Center" HorizontalAlignment="Center"/>
                            </StackPanel>
                            <!-- 하단 상태 표시 (Footer) -->
                            <footer:FooterStatusControl Grid.Row="1"/>
                        </Grid>
                    </TabItem.Content>
                </TabItem>

                <!-- Settings 탭 -->
                <TabItem Header="{x:Static properties:Resources.Tab_Settings}" 
                         Style="{StaticResource TabItemButtonStyle}">
                    <TabItem.Tag>
                        <Image Source="/Assets/tab_settings.png" Width="24" Height="24"/>
                    </TabItem.Tag>
                    <!-- Settings 탭 콘텐츠 -->
                    <TabItem.Content>
                        <Grid>
                            <Grid.RowDefinitions>
                                <!-- 콘텐츠 영역 -->
                                <RowDefinition Height="*"/>
                                <!-- 하단 상태 표시 영역 -->
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.Resources>
                                <!-- 기본 텍스트 스타일 -->
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="Black"/>
                                </Style>
                            </Grid.Resources>
                            <Grid Grid.Row="0" Margin="30">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <!-- 언어 설정 카드 -->
                                <Border Grid.Row="1" Margin="0,5,0,0" VerticalAlignment="Top" 
                                        Background="White" CornerRadius="8" Padding="20" 
                                        BorderBrush="#E0E0E0" BorderThickness="1">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <!-- 언어 제목 영역 -->
                                        <StackPanel Orientation="Horizontal" Margin="0,3,20,0" Grid.Column="0">
                                            <Image Source="/Assets/icon_language.png" Width="20" Height="20" VerticalAlignment="Top"/>
                                            <TextBlock Text="{x:Static properties:Resources.Input_Language}" FontSize="20" FontWeight="SemiBold" Margin="5,0,0,0"/>
                                        </StackPanel>
                                        
                                        <!-- 언어 선택 콤보박스 영역 -->
                                        <Grid Grid.Column="1">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <StackPanel Grid.Column="0">
                                                <ComboBox Height="32"
                                                          SelectedValue="{Binding SelectedLanguage, Mode=TwoWay}"
                                                          SelectedValuePath="Tag"
                                                          HorizontalAlignment="Stretch"
                                                          SelectionChanged="ComboBox_SelectionChanged">
                                                    <!-- 커스텀 콤보박스 템플릿 -->
                                                    <ComboBox.Style>
                                                        <Style TargetType="ComboBox">
                                                            <Setter Property="Background" Value="White"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="ComboBox">
                                                                        <Grid MouseLeftButtonDown="ComboBoxArea_MouseLeftButtonDown">
                                                                            <Border Background="{TemplateBinding Background}"
                                                                                    BorderBrush="Gray"
                                                                                    BorderThickness="1"
                                                                                    CornerRadius="3"
                                                                                    Padding="4">
                                                                                <Grid>
                                                                                    <ToggleButton Name="ToggleButton"
                                                                                                  IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                  Focusable="False"
                                                                                                  ClickMode="Press"
                                                                                                  Background="Transparent"
                                                                                                  BorderThickness="0"
                                                                                                  HorizontalAlignment="Right"
                                                                                                  VerticalAlignment="Center">
                                                                                        <Path Fill="Black" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                                                                    </ToggleButton>
                                                                                    <ContentPresenter Margin="4,0,20,0"
                                                                                                      VerticalAlignment="Center"
                                                                                                      HorizontalAlignment="Left"
                                                                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                                                                                </Grid>
                                                                            </Border>
                                                                            <!-- 드롭다운 팝업 -->
                                                                            <Popup Name="Popup"
                                                                                   Placement="Bottom"
                                                                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                                                                   AllowsTransparency="True"
                                                                                   Focusable="False"
                                                                                   PopupAnimation="Slide">
                                                                                <Grid Name="DropDown"
                                                                                      SnapsToDevicePixels="True"
                                                                                      MinWidth="{TemplateBinding ActualWidth}"
                                                                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                                                                    <Border  Background="White"
                                                                                            BorderBrush="Gray"
                                                                                            BorderThickness="1">
                                                                                        <ScrollViewer Margin="4"
                                                                                                      SnapsToDevicePixels="True">
                                                                                            <ItemsPresenter/>
                                                                                        </ScrollViewer>
                                                                                    </Border>
                                                                                </Grid>
                                                                            </Popup>
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="HasItems" Value="false">
                                                                                <Setter TargetName="DropDown" Property="MinHeight" Value="95"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="false">
                                                                                <Setter Property="Foreground" Value="Gray"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsGrouping" Value="true">
                                                                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ComboBox.Style>
                                                    <!-- 언어 옵션 -->
                                                    <ComboBoxItem Content="Bahasa Indonésia (Indonesian) (Beta)" Tag="id-ID"/>
                                                    <ComboBoxItem Content="English (English)" Tag="en-US"/>
                                                    <ComboBoxItem Content="한국어 (Korean)" Tag="ko-KR"/>
                                                </ComboBox>
                                            </StackPanel>
                                            <!-- 언어 선택 안내 문구 -->
                                            <TextBlock Text="{x:Static properties:Resources.Inline_Language_DefaultMessage}" 
                                                       Foreground="Gray" 
                                                       FontSize="12" 
                                                       Margin="0,8,0,0"
                                                       Grid.Row="1"
                                                       />
                                            <!-- 적용 버튼 -->
                                            <Button Content="{x:Static properties:Resources.Button_Apply}"
                                                    HorizontalAlignment="Right"
                                                    Command="{Binding ApplyLanguageCommand}"
                                                    Margin="0,30,0,0"
                                                    Width="100"
                                                    Height="35"
                                                    IsEnabled="{Binding CanApplyLanguage}"
                                                    Style="{StaticResource ApplyButtonStyle}"
                                                    Grid.Row="2"/>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                            <!-- 하단 상태 표시 (Footer) -->
                            <footer:FooterStatusControl Grid.Row="1"/>
                        </Grid>
                    </TabItem.Content>
                </TabItem>
            </TabControl>

            <!-- (B) 선택된 탭의 콘텐츠 영역 -->
            <Border Grid.Column="1" Background="White">
                <ContentPresenter Content="{Binding SelectedContent, ElementName=MyTabControl}" />
            </Border>
        </Grid>
    </Grid>
</Window>
